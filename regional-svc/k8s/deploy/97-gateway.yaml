---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app: "gateway"
    kind: "k8s-native"
    version: "1.0"
  name: "gateway"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "gateway"
      kind: "k8s-native"
      version: "1.0"
  template:
    metadata:
      labels:
        app: "gateway"
        kind: "k8s-native"
        version: "1.0"
    spec:
      serviceAccountName: boot-sa
      initContainers:
      - name: init-config-check
        image: busybox:latest
        command:
        - '/bin/sh'
        - '-c'
        - |
          while true
          do
            rt=$(nc -z -w 1 config-service 80)
            if [ $? -eq 0 ]; then
              echo "Config service is UP"
              break
            fi
            echo "Config service is not yet reachable;sleep for 5s before retry"
            sleep 5
          done      
      containers:
      - name: "gateway"
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 10"]
        envFrom:
        - configMapRef: 
            name: config-props
        image: "harbor.sys.humourmind.com/tanzumc/gateway-rsvc:1.0"
        imagePullPolicy: "Always"
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: "/actuator/health/readiness"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: "/actuator/health/liveness"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        ports:
        - containerPort: 8080
          name: "web"
          protocol: "TCP"
---
apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    app: "gateway-service"
    version: "1.0"
  name: "gateway-service"
spec:
  ports:
  - name: "web"
    port: 80
    targetPort: 8080
  selector:
    app: "gateway"
    version: "1.0"
  type: "ClusterIP"          
